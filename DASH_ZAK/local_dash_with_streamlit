
import streamlit as st
import plotly.express as px
import pandas as pd
import os
import warnings
warnings.filterwarnings('ignore')
st.set_page_config(page_title='Dashboard',
                   page_icon=':bar_chart:', layout='wide')
st.title(':bar_chart: DASHBORD by ZAK(EDA)')
st.markdown(
    '<style>div.block-container{padding-top:1rem;}</style>', unsafe_allow_html=True)
fl = st.file_uploader(':file_folder: Upload a file',
                      type=(['csv', 'txt', 'xlsx', 'xls',]))
if fl is not None:
    filename = fl.name
    st.write(filename)
    df = pd.read_excel(filename)
else:
    os.chdir(r'/Users/zakaria/Downloads/')
    df = pd.read_excel('Superstore.xls')

col1, col2 = st.columns((2))
df['Order Date'] = pd.to_datetime(df['Order Date'])

startdate = pd.to_datetime(df['Order Date']).min()

enddate = pd.to_datetime(df['Order Date']).max()

with col1:
    date1 = pd.to_datetime(st.date_input('Start Date', startdate))

with col2:
    date2 = pd.to_datetime(st.date_input('End Date', enddate))

df = df[(df['Order Date'] >= date1) & (
df['Order Date'] <= date2)].copy()
  
st.sidebar.header("choose your filter: ")
region = st.sidebar.multiselect('Pick your Region', df['Region'].unique())
if not region:
    df2 = df.copy()
else:
    df2 =  df[df['Region'].isin(region)]
state = st.sidebar.multiselect('Pick your State', df2['State'].unique())
if not state:
    df3 = df2.copy()
else:
    df3 =  df2[df['State'].isin(state)]
city = st.sidebar.multiselect('Pick your City', df3['City'].unique())
if not region and not state and not city:
    filtered_df = df
elif not state and city:
    filtered_df = df[df['Region'].isn(region)]
elif not region and not city:
    filtered_df = df[df['State'].isn(state)]
elif state and city:
        filtered_df = df3[df['State'].isn(state) & df3['City'].isn(city)]

elif region and city:
        filtered_df = df3[df['State'].isn(region) & df3['City'].isn(city)]

elif region and state:
        filtered_df = df3[df['State'].isn(region) & df3['City'].isn(state)]
elif city:
    filtered_df = df3[df['City'].isn(city)]
else:
    filtered_df = df3[df['Region'].isn(region) & df3['State'].isn(state) & df3['City'].isn(city)]
category_df = filtered_df.groupby(by = ['Category'], as_index )




